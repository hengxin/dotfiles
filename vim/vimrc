" ################################################################################ 
" ########## The following is for Vundle ##########
" ########## See https://github.com/VundleVim/Vundle.vim ########## 
set nocompatible              " be iMproved, required
filetype off                  " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
Plugin 'VundleVim/Vundle.vim'
" Plugins
Plugin 'tpope/vim-surround'
Plugin 'vim-scripts/LanguageTool'
Plugin 'vim-scripts/bash-support.vim'
Plugin 'wincent/command-t'
Plugin 'easymotion/vim-easymotion'

call vundle#end()            " required
filetype plugin indent on    " required

" ################################################################################ 
" ########## The following is configured for Latex-Suite ##########
" ########## See http://vim-latex.sourceforge.net/documentation/latex-suite/recommended-settings.html ##########
" REQUIRED. This makes vim invoke Latex-Suite when you open a tex file.
filetype plugin on

" IMPORTANT: win32 users will need to have 'shellslash' set so that latex
" can be called correctly.
set shellslash

" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a singe file. This will confuse Latex-Suite. Set your grep
" program to always generate a file-name.
set grepprg=grep\ -nH\ $*

" OPTIONAL: This enables automatic indentation as you type.
filetype indent on

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
" let g:tex_flavor='latex' (I (hengxin) changed it to 'xelatex')
let g:tex_flavor='xelatex'
let g:Tex_CompileRule_pdf = 'xelatex --synctex=-1 -src-specials -interaction=nonstopmode -file-line-error-style $*'
let g:Tex_DefaultTargetFormat='pdf'
let g:Tex_FormatDependency_pdf = 'pdf'
let g:Tex_MultipleCompileFormats='pdf'
let g:Tex_ViewRule_pdf =  'SumatraPDF -reuse-instance '

" F2: autosave before compiling
map <f2> :w<cr><leader>ll
" ########## End of configuration for Latex-Suite ##########

syntax on
set number
set relativenumber

" Use the OS clipboard by default
set clipboard=unnamed

set textwidth=100

" [indent](http://stackoverflow.com/a/234578/1833118)
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" show existing tab with 4 spaces width
set tabstop=4
" On pressing tab, insert 4 spaces
" set expandtab

" spell checking
"ignore East Asian characters including Chinese; see http://unix.stackexchange.com/a/192835
set spelllang+=cjk  
setlocal spell

" set background=dark

set guifont=Ubuntu\ Mono\ 15

" incremental and highlight search
set incsearch
set hlsearch

set showmode
set title
set showcmd

" Donâ€™t add empty newlines at the end of files
set binary
set noeol

" #################### for netrw: the explorer mode ####################
let mapleader=" "
map <leader>e :Explore<cr> 
map <leader>t :Texplore<cr>
map <leader>v :Vexplore<cr>
let g:netrw_liststyle=3
" #################### for netrw: the explorer mode ####################


" ########## placeholders ########## 
" ##### See http://vim.wikia.com/wiki/Simple_placeholders #####
" A syntax for placeholders
" Pressing Control-j jumps to the next match.
" inoremap <c-j> <Esc>/<++><CR><Esc>cf>

" Completions using placeholders
" inoremap ) ()<++><Esc>F)i
" inoremap ] []<++><Esc>F]i
" inoremap } {}<++><Esc>F}i
" inoremap > <><++><Esc>F>i
" inoremap ' ''<++><Esc>F'i
" ########## placeholders ########## 

" #################### Plugin Configurations #################### 

" for LanguageTool Plugin
let g:languagetool_jar="~/SoftwareService/LanguageTool-3.3/languagetool-commandline.jar"

" ########## for bash-support Plugin ##########
let g:BASH_AuthorName   = 'hengxin'
let g:BASH_Email        = 'hengxin0912@gmail.com'
let g:BASH_Company      = 'ICS@NJU'
" ########## for bash-support Plugin ##########

" ########## for easymotion Plugin ########## 
let g:EasyMotion_do_mapping = 0 " Disable default mappings

" Jump to anywhere you want with minimal keystrokes, with just one key binding.
" `s{char}{label}`
nmap s <Plug>(easymotion-overwin-f)
" or
" `s{char}{char}{label}`
" Need one more keystroke, but on average, it may be more comfortable.
nmap d <Plug>(easymotion-overwin-f2)

" Turn on case insensitive feature
let g:EasyMotion_smartcase = 1

" JK motions: Line motions
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
" ########## for easymotion Plugin ########## 

" ################### Plugin Configurations ##################### 

" #################### Abbreviations #################### 
iab c10% %%%%%%%%%%
iab c20% %%%%%%%%%%%%%%%%%%%%
iab c40% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
iab c10# ##########
iab c20# ####################
iab c40# ########################################

iab cfig %%%%%%%%%% fig:<++> %%%%%%%%%%
iab ctbl %%%%%%%%%% tbl:<++> %%%%%%%%%%
" #################### Abbreviations #################### 